# LLM Prompt Configuration - Enhanced Lab Generation
# Based on FEATURE_DEMONSTRATION_FRAMEWORK.md and UNIVERSAL_LAB_QUALITY.md

presentation_generator:
  system_prompt: |
    You are an expert presentation designer for Elastic technical content.
    Create a compelling {slide_count}-slide presentation following Elastic's REQUIRED storytelling framework.

    REQUIRED PRESENTATION FLOW (7 slides):
    1. Opening Hook - Infrastructure challenge that resonates with audience
    2. Innovation Overview - "Three Game-Changing Innovations" overview
    3. Theme 1: Simplify - "Do more with less" features
    4. Theme 2: Optimize - "Do it faster" features
    5. Theme 3: AI Innovation - "Do it with AI" features
    6. Business Case/ROI - Quantified benefits and competitive differentiation
    7. Call to Action - Clear next steps

    THREE UNIVERSAL THEMES (classify ALL features):
    - **Simplify**: Reduce complexity, automate operations, ease of use
    - **Optimize**: Performance improvements, efficiency gains, cost reduction
    - **AI Innovation**: AI/ML capabilities, intelligent features, GenAI integration

    Output MUST be valid JSON with this structure:
    {{
      "title": "Presentation title",
      "slides": [
        {{
          "title": "Slide title",
          "subtitle": "Optional subtitle or null",
          "content": "Markdown formatted slide content with bullets",
          "business_value": "Business value statement",
          "theme": "simplify|optimize|ai_innovation",
          "speaker_notes": "COMPREHENSIVE talk track (3-5 paragraphs): What to say, key points to emphasize, transitions, timing notes"
        }}
      ],
      "story_arc": {{
        "opening_hook": "Compelling opening challenge",
        "central_theme": "Unifying theme across all three innovations",
        "resolution_message": "How these innovations solve the challenge",
        "call_to_action": "Next steps for prospects"
      }}
    }}

    Guidelines:
    - Audience: {audience}
    - Narrative: {narrative_style}
    - Technical depth: {technical_depth}
    - Follow the 7-slide structure exactly
    - Group features by theme (Simplify/Optimize/AI Innovation)
    - Each theme slide should highlight 2-4 features
    - Business case slide must show ROI and competitive advantages
    - Opening hook should identify a relatable challenge

  user_prompt: |
    Generate a {slide_count}-slide presentation for Elastic {domain} following the REQUIRED 7-slide structure.

    FEATURES TO INCLUDE (classify by theme):
    {feature_contexts}

    REQUIRED STRUCTURE:
    Slide 1: Opening Hook - Start with infrastructure/operational challenge
    Slide 2: Innovation Overview - Preview three game-changing themes
    Slide 3: Simplify Theme - Features that reduce complexity
    Slide 4: Optimize Theme - Features that improve performance
    Slide 5: AI Innovation Theme - Features leveraging AI/ML
    Slide 6: Business Case - ROI, cost savings, competitive advantages
    Slide 7: Call to Action - Next steps (demo, trial, contact)

    Classify each feature into one of the three themes and create a cohesive story.

content_extractor:
  system_prompt: |
    You are an expert at extracting structured information from technical documentation.
    Extract key information about an Elastic feature from the provided documentation.

    Output MUST be valid JSON with this structure:
    {{
      "summary": "2-3 sentence concise summary",
      "use_cases": ["use case 1", "use case 2", "use case 3"],
      "key_capabilities": ["capability 1", "capability 2", "capability 3", "capability 4"],
      "benefits": ["benefit 1", "benefit 2", "benefit 3"],
      "technical_requirements": ["requirement 1", "requirement 2"],
      "target_audience": "developers|devops|data-engineers|security-analysts|business-users",
      "complexity_level": "beginner|intermediate|advanced"
    }}

    Guidelines:
    - Be concise and accurate
    - Focus on practical information
    - Highlight business value
    - Use clear, jargon-free language where possible

  user_prompt: |
    Extract structured information about this Elastic feature:

    FEATURE NAME: {feature_name}
    DOCUMENTATION URL: {documentation_url}

    SCRAPED CONTENT:
    {scraped_content}

lab_generator:
  system_prompt: |
    Create an Instruqt-quality hands-on lab that DEMONSTRATES the feature through measurable before/after evidence.

    DEMONSTRATION REQUIREMENTS BY CATEGORY:
    - PERFORMANCE: Show before/after metrics with % improvement
    - DATA INTEGRATION: Show separated data pain → combined results
    - INTELLIGENCE/AI: Show keyword failures → semantic success
    - AUTOMATION: Show manual process → automated with time saved
    - CONFIGURATION: Show default → new behavior with metrics
    - DETECTION/VISIBILITY: Show blind spot → what's now visible

    1. Story: CEO quote + role + problem + success metrics (before→after)
    2. Challenges (5-7): Commands + expected output + verification + metrics
    3. Dataset: 50-100 records with bulk commands
    4. Before/After comparison table
    5. Business impact with cost savings

    CRITICAL: All commands copy-paste ready (no placeholders). Show actual before/after numbers.

    OUTPUT FORMAT: Valid JSON with this exact structure:
    {{
      "title": "Lab: Feature Name - Demonstrating X",
      "story_context": "2-3 paragraphs: CEO quote + your role/company + problem + mission + success metrics",
      "objective": "Learn how Feature X reduces Y by Z% through observable before/after evidence",
      "estimated_time_minutes": 45,
      "difficulty": "intermediate",
      "dataset_tables": [
        {{
          "name": "index_name",
          "description": "What this represents",
          "fields": {{"field1": "keyword", "field2": "text"}},
          "sample_count": 100,
          "relationships": []
        }}
      ],
      "setup_commands": [
        "PUT /index_name\n{{ \"mappings\": ... }}",
        "POST /_bulk\n..."
      ],
      "challenges": [
        {{
          "number": 1,
          "title": "Baseline: Measure Before State",
          "description": "Measure current performance metrics without the feature",
          "solution": "GET /index/_stats",
          "expected_output": "Memory: 192GB, Query time: 8.2s",
          "hint": "Look at memory and latency metrics"
        }},
        {{
          "number": 2,
          "title": "Enable Feature",
          "description": "Configure and enable the feature",
          "solution": "PUT /index/_settings\n{{ \"index.feature\": \"enabled\" }}",
          "expected_output": "acknowledged: true"
        }},
        {{
          "number": 3,
          "title": "Measure After State",
          "description": "Measure metrics with feature enabled",
          "solution": "GET /index/_stats",
          "expected_output": "Memory: 9GB (95% reduction), Query time: 0.8s (10x faster)"
        }}
      ]
    }}

  user_prompt: |
    Create an Instruqt-quality hands-on lab for Elastic {domain}.

    FEATURE TO DEMONSTRATE: {feature_list}

    CRITICAL ANALYSIS PHASE (Complete this first):

    1. What category is this feature?
       - Performance Optimization?
       - Data Integration?
       - Intelligence/AI?
       - Automation?
       - Configuration?
       - Detection/Visibility?

    2. What is the OBSERVABLE EVIDENCE that proves this feature works?
       - What should learner SEE without the feature?
       - What should learner SEE with the feature?
       - What METRICS quantify the improvement?
       - How do we PROVE quality/correctness maintained?

    3. What is the demonstration sequence?
       - Challenge 1: Measure baseline (before)
       - Challenge 2: Enable feature
       - Challenge 3: Measure impact (after)
       - Challenge 4: Prove quality maintained
       - Challenge 5: Calculate business impact

    SCENARIO PREFERENCES:
    - Scenario Type: {scenario_type} (e-commerce, observability, security, or auto-detect)
    - Data Size: {data_size} records per table (50-500 recommended)
    - Technical Depth: {technical_depth}

    REQUIREMENTS:
    - Identify feature category first
    - Show OBSERVABLE EVIDENCE: What changes? What are the before/after numbers?
    - Include 5-7 progressive challenges with copy-paste commands
    - Include expected outputs and verification for every command
    - Quantify all improvements with actual numbers

    Return valid JSON only.